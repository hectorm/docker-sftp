#!/bin/sh

set -eu

# Generate SSH keys
if [ ! -f /etc/ssh/ssh_host_ed25519_key ]; then
	ssh-keygen -t ed25519 -f /etc/ssh/ssh_host_ed25519_key -N '' >/dev/null
fi
if [ ! -f /etc/ssh/ssh_host_rsa_key ]; then
	ssh-keygen -t rsa -b 4096 -f /etc/ssh/ssh_host_rsa_key -N '' >/dev/null
fi

# Load all files from the "/etc/sftp-users.d/" directory
NL=$(printf '\nx'); NL=${NL%x}
for f in /etc/sftp-users.d/*; do
	[ -f "${f:?}" ] || continue
	SFTP_USERS_FRAGMENT=$(cat "${f:?}")
	SFTP_USERS=${SFTP_USERS?}${NL:?}${SFTP_USERS_FRAGMENT?}
done

# Create SFTP users
_IFS=${IFS}; IFS=${NL:?}
for entry in ${SFTP_USERS?}; do
	user=${entry%%:*};  entry=${entry#*:}
	pass=${entry%%:*};  entry=${entry#*:}
	ptype=${entry%%:*}; entry=${entry#*:}
	uid=${entry%%:*};   entry=${entry#*:}
	gid=${entry%%:*};   entry=${entry#*:}
	dirs=${entry%%:*};  entry=${entry#*:}

	home=/home/${user:?}
	shell=/bin/sh
	groups=ssh-user

	# Print entry information
	printf -- '%s\n' "${user}:::${uid}:${gid}:${dirs}"

	# Create user and group if they do not exist
	if ! getent group "${gid:?}" >/dev/null 2>&1; then
		groupadd -g "${gid:?}" "g_${gid:?}"
	fi
	if ! getent passwd "${uid:?}" >/dev/null 2>&1; then
		useradd -u "${uid:?}" -g "${gid:?}" -Md "${home:?}" -s "${shell:?}" -G "${groups:?}" "${user:?}"
	fi

	# Set user password
	if [ -n "${pass?}" ]; then
		case "${ptype?}" in
			encrypted) chpasswdOpts='-e' ;;
			*)         chpasswdOpts=''   ;;
		esac
		printf '%s' "${user:?}:${pass:?}" | chpasswd ${chpasswdOpts?}
	else
		passwd -d "${user:?}" >/dev/null
	fi

	# Create "${home}" directory
	[ -e "${home:?}" ] || mkdir "${home:?}"
	cp -aT /etc/skel/ "${home:?}"
	chown root:root "${home:?}"
	chmod 755 "${home:?}"

	# Create user directories
	_IFS=$IFS; IFS=,
	for dir in ${dirs?}; do
		fulldir=$(readlink -m "${home:?}/data/${dir:?}")
		if [ "${fulldir:?}" != "${fulldir#${home:?}/data/}" ]; then
			mkdir -p "${fulldir:?}"
			chown "${uid:?}:${gid:?}" "${fulldir:?}"
		fi
	done
	IFS=$_IFS
done
IFS=$_IFS

# Run sshd
exec "$(command -v sshd)" -D -e
