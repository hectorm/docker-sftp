#!/bin/sh

set -eu

# Generate SSH keys
if [ ! -f /etc/ssh/ssh_host_ed25519_key ]; then
	ssh-keygen -t ed25519 -f /etc/ssh/ssh_host_ed25519_key -N '' >/dev/null
fi
if [ ! -f /etc/ssh/ssh_host_rsa_key ]; then
	ssh-keygen -t rsa -b 4096 -f /etc/ssh/ssh_host_rsa_key -N '' >/dev/null
fi

# Create SFTP users
_IFS=$IFS; IFS="$(printf '\nx')"; IFS="${IFS%x}"
for entry in ${SFTP_USERS?}; do
	user=${entry%%:*};  entry=${entry#*:}
	pass=${entry%%:*};  entry=${entry#*:}
	ptype=${entry%%:*}; entry=${entry#*:}
	uid=${entry%%:*};   entry=${entry#*:}
	gid=${entry%%:*};   entry=${entry#*:}
	dirs=${entry%%:*};  entry=${entry#*:}

	home=/home/${user:?}

	# Create user and group
	if ! id -u "${user:?}" >/dev/null 2>&1; then
		groupadd -g "${gid:?}" "${user:?}"
		useradd -u "${uid:?}" -g "${gid:?}" -G ssh-user -Md "${home:?}" -s /bin/sh "${user:?}"
	fi

	# Set user password
	if [ -n "${pass?}" ]; then
		case "${ptype?}" in
			encrypted) chpasswdOpts='-e' ;;
			*)         chpasswdOpts=''   ;;
		esac
		printf '%s' "${user:?}:${pass:?}" | chpasswd ${chpasswdOpts?}
	else
		passwd -d "${user:?}" >/dev/null
	fi

	# Create "${home}" directory
	[ -e "${home:?}" ] || mkdir "${home:?}"
	cp -aT /etc/skel/ "${home:?}"
	chown root:root "${home:?}"
	chmod 755 "${home:?}"

	# Create "${home}/.ssh/" directory
	[ -e "${home:?}/.ssh" ] || mkdir "${home:?}/.ssh"
	chown root:root "${home:?}/.ssh"
	chmod 755 "${home:?}/.ssh"

	# Create "${home}/.ssh/authorized_keys" file
	rm -f "${home:?}/.ssh/authorized_keys"
	touch "${home:?}/.ssh/authorized_keys"
	chown "${user:?}:${user:?}" "${home:?}/.ssh/authorized_keys"
	chmod 600 "${home:?}/.ssh/authorized_keys"
	if [ -d "${home:?}/.ssh/authorized_keys.d/" ]; then
		for key in "${home:?}/.ssh/authorized_keys.d/"*; do
			[ -f "${key:?}" ] || continue
			cat "${key:?}" >> "${home:?}/.ssh/authorized_keys"
		done
	fi

	# Create user directories
	_IFS=$IFS; IFS=,
	for dir in ${dirs?}; do
		fulldir=$(readlink -m "${home:?}/data/${dir:?}")
		if [ "${fulldir:?}" != "${fulldir#${home:?}/data/}" ]; then
			mkdir -p "${fulldir:?}"
			chown "${user:?}:${user:?}" "${fulldir:?}"
		fi
	done
	IFS=$_IFS
done
IFS=$_IFS

# Run sshd
exec "$(command -v sshd)" -D -e
